#include <stdio.h>
#include <stdlib.h>

void printSubsets(int arr[], int n, int subset[], int subsetSize) {
    printf("{ ");
    for (int i = 0; i < subsetSize; i++) {
        printf("%d ", subset[i]);
    }
    printf("}\n");
}

void generateSubsets(int arr[], int n) {
    int totalSubsets = 1 << n; // 2^n subsets
    for (int i = 0; i < totalSubsets; i++) {
        int subset[n];
        int subsetSize = 0;
        for (int j = 0; j < n; j++) {
            if (i & (1 << j)) {
                subset[subsetSize++] = arr[j];
            }
        }
        printSubsets(arr, n, subset, subsetSize);
    }
}

void generateSubsetsContainingElement(int arr[], int n, int elem) {
    int totalSubsets = 1 << n; // 2^n subsets
    for (int i = 0; i < totalSubsets; i++) {
        int subset[n];
        int subsetSize = 0;
        int containsElem = 0;
        for (int j = 0; j < n; j++) {
            if (i & (1 << j)) {
                subset[subsetSize++] = arr[j];
                if (arr[j] == elem) {
                    containsElem = 1;
                }
            }
        }
        if (containsElem) {
            printSubsets(arr, n, subset, subsetSize);
        }
    }
}

int main() {
    int arr[] = {1, 2, 3};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("All subsets:\n");
    generateSubsets(arr, n);

    int arr2[] = {2, 3, 4, 5};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    int x = 3;
    printf("\nSubsets containing %d:\n", x);
    generateSubsetsContainingElement(arr2, n2, x);

    return 0;
}
