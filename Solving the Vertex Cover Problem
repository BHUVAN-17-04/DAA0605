#include <stdio.h>
#include <stdbool.h>

#define V 5 // Number of vertices
#define E 6 // Number of edges

void printCoverSet(int coverSet[], int coverSize) {
    printf("Vertex Cover: { ");
    for (int i = 0; i < coverSize; i++) {
        printf("%d ", coverSet[i]);
    }
    printf("}\n");
}

bool isCovered(int edges[][2], int e, int coverSet[], int coverSize) {
    for (int i = 0; i < e; i++) {
        bool covered = false;
        for (int j = 0; j < coverSize; j++) {
            if (edges[i][0] == coverSet[j] || edges[i][1] == coverSet[j]) {
                covered = true;
                break;
            }
        }
        if (!covered) return false;
    }
    return true;
}

void findVertexCover(int edges[][2], int e, int coverSet[], int coverSize, int start) {
    if (isCovered(edges, e, coverSet, coverSize)) {
        printCoverSet(coverSet, coverSize);
        return;
    }

    for (int i = start; i < V; i++) {
        coverSet[coverSize] = i;
        findVertexCover(edges, e, coverSet, coverSize + 1, i + 1);
    }
}

int main() {
    int edges[E][2] = {
        {0, 1},
        {0, 2},
        {1, 2},
        {1, 3},
        {3, 4},
        {2, 4}
    };

    int coverSet[V];
    findVertexCover(edges, E, coverSet, 0, 0);

    return 0;
}
