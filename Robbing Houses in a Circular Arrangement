#include <stdio.h>
#include <stdlib.h>

int rob(int nums[], int n) {
    if (n == 0) return 0;
    if (n == 1) return nums[0];

    int dp[n];
    dp[0] = nums[0];
    dp[1] = (nums[0] > nums[1]) ? nums[0] : nums[1];

    for (int i = 2; i < n; i++) {
        dp[i] = (dp[i - 1] > dp[i - 2] + nums[i]) ? dp[i - 1] : (dp[i - 2] + nums[i]);
    }

    return dp[n - 1];
}

int robCircular(int nums[], int n) {
    if (n == 1) return nums[0];
    int nums1[n - 1], nums2[n - 1];

    for (int i = 0; i < n - 1; i++) {
        nums1[i] = nums[i];
        nums2[i] = nums[i + 1];
    }

    return (rob(nums1, n - 1) > rob(nums2, n - 1)) ? rob(nums1, n - 1) : rob(nums2, n - 1);
}

int main() {
    int nums1[] = {2, 3, 2};
    int nums2[] = {1, 2, 3, 1};
    int n1 = sizeof(nums1) / sizeof(nums1[0]);
    int n2 = sizeof(nums2) / sizeof(nums2[0]);

    printf("Max money (circular): %d\n", robCircular(nums1, n1));
    printf("Max money (circular): %d\n", robCircular(nums2, n2));

    return 0;
}
